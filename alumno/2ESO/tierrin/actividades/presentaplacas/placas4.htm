<?xml version="1.0"?>
       <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "xhtml11.dtd">
       <html xmlns="http://www.w3.org/1999/xhtml"
             xml:lang="en"><head><meta name="author" content="Created with Hot Potatoes by Half-Baked Software, registered to Alfonso De Mier."></meta><meta name="keywords" content="Hot Potatoes, Hot Potatoes, Half-Baked Software, Windows, University of Victoria"></meta>

<link rel="schema.DC" href="http://purl.org/dc/elements/1.1/" />
<meta name="DC:Creator" content="Alfonso De Mier" />
<meta name="DC:Title" content="Esacala de Mercalli" />


<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" /> 

<title>
Esacala de Mercalli
</title>

<!-- Made with executable version 6.0 Release 4 Build 15 -->

<!-- The following insertion allows you to add your own code directly to this head tag from the configuration screen -->



<style type="text/css">


/* This is the CSS stylesheet used in the exercise. */
/* Elements in square brackets are replaced by data based on configuration settings when the exercise is built. */

/* BeginCorePageCSS */

/* Made with executable version 6.0 Release 4 Build 15 */

body{
	font-family: Geneva,Arial;
	background-color: #e1ffe1;
	color: #000033;
 
	margin-right: 5%;
	margin-left: 5%;
	font-size: small;
}

p{
	text-align: left;
	margin: 0px;
	font-size: 100%;
}

table,div,span,td{
	font-size: 100%;
	color: #000033;
}

div.Titles{
	padding: 0.5em;;
	text-align: center;
	color: #000033;
}

button{
	font-family: Geneva,Arial;
	font-size: 100%;
	display: inline;
}

.ExerciseTitle{
	font-size: 140%;
	color: #000033;
}

.ExerciseSubtitle{
	font-size: 120%;
	color: #000033;
}

div.StdDiv{
	background-color: #e1ffe1;
	text-align: center;
	font-size: 100%;
	color: #000033;
	padding: 0.5em;
	border-style: solid;
	border-width: 1px 1px 1px 1px;
	border-color: #000033;
	margin-bottom: 1px;
}

/* EndCorePageCSS */

.RTLText{
	text-align: right;
	font-size: 150%;
	direction: rtl;
	font-family: "Simplified Arabic", "Traditional Arabic", "Times New Roman", Geneva,Arial; 
}

.CentredRTLText{
	text-align: center;
	font-size: 150%;
	direction: rtl;
	font-family: "Simplified Arabic", "Traditional Arabic", "Times New Roman", Geneva,Arial; 
}

button p.RTLText{
	text-align: center;
}

.RTLGapBox{
	text-align: right;
	font-size: 150%;
	direction: rtl;
	font-family: "Times New Roman", Geneva,Arial;
}

.Guess{
	font-weight: bold;
}

.CorrectAnswer{
	font-weight: bold;
}

div#Timer{
	padding: 0.25em;
	margin-left: auto;
	margin-right: auto;
	text-align: center;
	color: #000033;
}

span#TimerText{
	padding: 0.25em;
	border-width: 1px;
	border-style: solid;
	font-weight: bold;
	display: none;
	color: #000033;
}

span.Instructions{

}

div.ExerciseText{

}

.FeedbackText, .FeedbackText span.CorrectAnswer, .FeedbackText span.Guess, .FeedbackText span.Answer{
	color: #000033;
}

.LeftItem{
	font-size: 100%;
	color: #000033;
	text-align: left;
}

.RightItem{
	font-weight: bold;
	font-size: 100%;
	color: #000033;
}

span.CorrectMark{

}

input, textarea{
	font-family: Geneva,Arial;
	font-size: 120%;
}

select{
	font-size: 100%;
}

div.Feedback {
	background-color: #e1ffe1;
	left: 33%;
	width: 34%;
	top: 33%;
	z-index: 1;
	border-style: solid;
	border-width: 1px;
	padding: 5px;
	text-align: center;
	color: #000033;
	position: absolute;
	display: none;
	font-size: 100%;
}




div.ExerciseDiv{
	color: #000033;
}

/* JMatch flashcard styles */
table.FlashcardTable{
	background-color: transparent;
	color: #000033;
	border-color: #000033;
	margin-left: 5%;
	margin-right: 5%;
	margin-top: 2em;
	margin-bottom: 2em;
	width: 90%;
	position: relative;
	text-align: center;
	padding: 0px;
}

table.FlashcardTable tr{
	border-style: none;
	margin: 0px;
	padding: 0px;
	background-color: #e1ffe1;
}

table.FlashcardTable td.Showing{
	font-size: 140%;
	text-align: center;
	width: 50%;
	display: table-cell;
	padding: 2em;
	margin: 0px;
	border-style: solid;
	border-width: 1px;
	color: #000033;
	background-color: #e1ffe1;
}

table.FlashcardTable td.Hidden{
	display: none;
}

/* JMix styles */
div#SegmentDiv{
	margin-top: 2em;
	margin-bottom: 2em;
	text-align: center;
}

a.ExSegment{
	font-size: 120%;
	font-weight: bold;
	text-decoration: none;
	color: #000033;
}

span.RemainingWordList{
	font-style: italic;
}

div.DropLine {
	position: absolute;
	text-align: center;
	border-bottom-style: solid;
	border-bottom-width: 1px;
	border-bottom-color: #000033;
	width: 80%;
}

/* JCloze styles */

.ClozeWordList{
	text-align: center;
	font-weight: bold;
}

div.ClozeBody{
	text-align: left;
	margin-top: 2em;
	margin-bottom: 2em;
	line-height: 2.0
}

span.GapSpan{
	font-weight: bold;
}

/* JCross styles */

table.CrosswordGrid{
	margin: auto auto 1em auto;
	border-collapse: collapse;
	padding: 0px;
	background-color: #000000;
}

table.CrosswordGrid tbody tr td{
	width: 1.5em;
	height: 1.5em;
	text-align: center;
	vertical-align: middle;
	font-size: 140%;
	padding: 1px;
	margin: 0px;
	border-style: solid;
	border-width: 1px;
	border-color: #000000;
	color: #000000;
}

table.CrosswordGrid span{
	color: #000000;
}

table.CrosswordGrid td.BlankCell{
	background-color: #000000;
	color: #000000;
}

table.CrosswordGrid td.LetterOnlyCell{
	text-align: center;
	vertical-align: middle;
	background-color: #ffffff;
	color: #000000;
	font-weight: bold;
}

table.CrosswordGrid td.NumLetterCell{
	text-align: left;
	vertical-align: top;
	background-color: #ffffff;
	color: #000000;
	padding: 1px;
	font-weight: bold;
}

.NumLetterCellText{
	cursor: pointer;
	color: #000000;
}

.GridNum{
	vertical-align: super;
	font-size: 66%;
	font-weight: bold;
	text-decoration: none;
	color: #000000;
}

.GridNum:hover, .GridNum:visited{
	color: #000000;
}

table#Clues{
	margin: auto;
	vertical-align: top;
}

table#Clues td{
	vertical-align: top;
}

table.ClueList{
  margin: auto;
}

td.ClueNum{
	text-align: right;
	font-weight: bold;
	vertical-align: top;
}

td.Clue{
	text-align: left;
}

div#ClueEntry{
	text-align: left;
	margin-bottom: 1em;
}

/* Keypad styles */

div.Keypad{
	text-align: center;
	display: none; /* initially hidden, shown if needed */
}

div.Keypad button{
	font-family: Geneva,Arial;
	font-size: 120%;
	background-color: #ffffff;
	color: #000000;
	width: 2em;
}

/* JQuiz styles */

div.QuestionNavigation{
	text-align: center;
}

.QNum{
	margin: 0em 1em 0.5em 1em;
	font-weight: bold;
	vertical-align: middle;
}

textarea{
	font-family: Geneva,Arial;
}

.QuestionText{

}

.Answer{
	font-size: 120%;
	letter-spacing: 0.1em;
}

.PartialAnswer{
	font-size: 120%;
	letter-spacing: 0.1em;
	color: #000033;
}

.Highlight{
	color: #000000;
	background-color: #ffff00;
	font-weight: bold;
	font-size: 120%;
}

ol.QuizQuestions{
	text-align: left;
	list-style-type: none;
}

li.QuizQuestion{
	padding: 1em;
	border-style: solid;
	border-width: 0px 0px 1px 0px;
}

ol.MCAnswers{
	text-align: left;
	list-style-type: upper-alpha;
	padding: 1em;
}

ol.MCAnswers li{
	margin-bottom: 1em;
}

ol.MSelAnswers{
	text-align: left;
	list-style-type: lower-alpha;
	padding: 1em;
}

div.ShortAnswer{
	padding: 1em;
}

.FuncButton {
	text-align: center;
	border-style: solid;

	border-left-color: #f0fff0;
	border-top-color: #f0fff0;
	border-right-color: #707f70;
	border-bottom-color: #707f70;
	color: #000033;
	background-color: #e1ffe1;

	border-width: 2px;
	padding: 3px 6px 3px 6px;
	cursor: pointer;
}

.FuncButtonUp {
	color: #e1ffe1;
	text-align: center;
	border-style: solid;

	border-left-color: #f0fff0;
	border-top-color: #f0fff0;
	border-right-color: #707f70;
	border-bottom-color: #707f70;

	background-color: #000033;
	color: #e1ffe1;
	border-width: 2px;
	padding: 3px 6px 3px 6px;
	cursor: pointer;
}

.FuncButtonDown {
	color: #e1ffe1;
	text-align: center;
	border-style: solid;

	border-left-color: #707f70;
	border-top-color: #707f70;
	border-right-color: #f0fff0;
	border-bottom-color: #f0fff0;
	background-color: #000033;
	color: #e1ffe1;

	border-width: 2px;
	padding: 3px 6px 3px 6px;
	cursor: pointer;
}

/*BeginNavBarStyle*/

div.NavButtonBar{
	background-color: #e1ffe1;
	text-align: center;
	margin: 2px 0px 2px 0px;
	clear: both;
	font-size: 100%;
}

.NavButton {
	border-style: solid;
	
	border-left-color: #f0fff0;
	border-top-color: #f0fff0;
	border-right-color: #707f70;
	border-bottom-color: #707f70;
	background-color: #e1ffe1;
	color: #000000;

	border-width: 2px;
	cursor: pointer;	
}

.NavButtonUp {
	border-style: solid;

	border-left-color: #f0fff0;
	border-top-color: #f0fff0;
	border-right-color: #707f70;
	border-bottom-color: #707f70;
	color: #e1ffe1;
	background-color: #000000;

	border-width: 2px;
	cursor: pointer;	
}

.NavButtonDown {
	border-style: solid;

	border-left-color: #707f70;
	border-top-color: #707f70;
	border-right-color: #f0fff0;
	border-bottom-color: #f0fff0;
	color: #e1ffe1;
	background-color: #000000;

	border-width: 2px;
	cursor: pointer;	
}

/*EndNavBarStyle*/

a{
	color: #408080;
}

a:visited{
	color: #408080;
}

a:hover{
	color: #408080;
}

div.CardStyle {
	position: absolute;
	font-family: Geneva,Arial;
	font-size: 100%;
	padding: 5px;
	border-style: solid;
	border-width: 1px;
	color: #000033;
	background-color: #e1ffe1;
	left: -50px;
	top: -50px;
	overflow: visible;
}

.rtl{
	text-align: right;
	font-size: 140%;
}


</style>

<script type="text/javascript">

//<![CDATA[

<!--


function Client(){
//if not a DOM browser, hopeless
	this.min = false; if (document.getElementById){this.min = true;};

	this.ua = navigator.userAgent;
	this.name = navigator.appName;
	this.ver = navigator.appVersion;  

//Get data about the browser
	this.mac = (this.ver.indexOf('Mac') != -1);
	this.win = (this.ver.indexOf('Windows') != -1);

//Look for Gecko
	this.gecko = (this.ua.indexOf('Gecko') > 1);
	if (this.gecko){
		this.geckoVer = parseInt(this.ua.substring(this.ua.indexOf('Gecko')+6, this.ua.length));
		if (this.geckoVer < 20020000){this.min = false;}
	}
	
//Look for Firebird
	this.firebird = (this.ua.indexOf('Firebird') > 1);
	
//Look for Safari
	this.safari = (this.ua.indexOf('Safari') > 1);
	if (this.safari){
		this.gecko = false;
	}
	
//Look for IE
	this.ie = (this.ua.indexOf('MSIE') > 0);
	if (this.ie){
		this.ieVer = parseFloat(this.ua.substring(this.ua.indexOf('MSIE')+5, this.ua.length));
		if (this.ieVer < 5.5){this.min = false;}
	}
	
//Look for Opera
	this.opera = (this.ua.indexOf('Opera') > 0);
	if (this.opera){
		this.operaVer = parseFloat(this.ua.substring(this.ua.indexOf('Opera')+6, this.ua.length));
		if (this.operaVer < 7.04){this.min = false;}
	}
	if (this.min == false){
		alert('Your browser may not be able to handle this page.');
	}
	
//Special case for the horrible ie5mac
	this.ie5mac = (this.ie&&this.mac&&(this.ieVer<6));
}

var C = new Client();

//for (prop in C){
//	alert(prop + ': ' + C[prop]);
//}



//CODE FOR HANDLING NAV BUTTONS AND FUNCTION BUTTONS

//[strNavBarJS]
function NavBtnOver(Btn){
	if (Btn.className != 'NavButtonDown'){Btn.className = 'NavButtonUp';}
}

function NavBtnOut(Btn){
	Btn.className = 'NavButton';
}

function NavBtnDown(Btn){
	Btn.className = 'NavButtonDown';
}
//[/strNavBarJS]

function FuncBtnOver(Btn){
	if (Btn.className != 'FuncButtonDown'){Btn.className = 'FuncButtonUp';}
}

function FuncBtnOut(Btn){
	Btn.className = 'FuncButton';
}

function FuncBtnDown(Btn){
	Btn.className = 'FuncButtonDown';
}

function FocusAButton(){
	if (document.getElementById('CheckButton1') != null){
		document.getElementById('CheckButton1').focus();
	}
	else{
		if (document.getElementById('CheckButton2') != null){
			document.getElementById('CheckButton2').focus();
		}
		else{
			document.getElementsByTagName('button')[0].focus();
		}
	}
}




//CODE FOR HANDLING DISPLAY OF POPUP FEEDBACK BOX

var topZ = 1000;

function ShowMessage(Feedback){
	var Output = Feedback + '<br /><br />';
	document.getElementById('FeedbackContent').innerHTML = Output;
	var FDiv = document.getElementById('FeedbackDiv');
	topZ++;
	FDiv.style.zIndex = topZ;
	FDiv.style.top = TopSettingWithScrollOffset(30) + 'px';

	FDiv.style.display = 'block';

	ShowElements(false, 'input');
	ShowElements(false, 'select');
	ShowElements(false, 'object');

//Focus the OK button
	setTimeout("document.getElementById('FeedbackOKButton').focus()", 50);
	
//
}

function ShowElements(Show, TagName){
//Special for IE bug -- hide all the form elements that will show through the popup
	if (C.ie){
		var Els = document.getElementsByTagName(TagName);
		for (var i=0; i<Els.length; i++){
			if (Show == true){
				Els[i].style.display = 'inline';
			}
			else{
				Els[i].style.display = 'none';
			}
		}
	} 
}

function HideFeedback(){
	document.getElementById('FeedbackDiv').style.display = 'none';
	ShowElements(true, 'input');
	ShowElements(true, 'select');
	ShowElements(true, 'object');
	if (Finished == true){
		Finish();
	}
}


//GENERAL UTILITY FUNCTIONS AND VARIABLES

//PAGE DIMENSION FUNCTIONS
function PageDim(){
//Get the page width and height
	this.W = 600;
	this.H = 400;
	this.W = document.getElementsByTagName('body')[0].clientWidth;
	this.H = document.getElementsByTagName('body')[0].clientHeight;
}

var pg = null;

function GetPageXY(El) {
	var XY = {x: 0, y: 0};
	while(El){
		XY.x += El.offsetLeft;
		XY.y += El.offsetTop;
		El = El.offsetParent;
	}
	return XY;
}

function GetScrollTop(){
	if (document.documentElement && document.documentElement.scrollTop){
		return document.documentElement.scrollTop;
	}
	else{
		if (document.body){
 			return document.body.scrollTop;
		}
		else{
			return window.pageYOffset;
		}
	}
}

function GetViewportHeight(){
	if (window.innerHeight){
		return window.innerHeight;
	}
	else{
		return document.getElementsByTagName('body')[0].clientHeight;
	}
}

function TopSettingWithScrollOffset(TopPercent){
	var T = Math.floor(GetViewportHeight() * (TopPercent/100));
	return GetScrollTop() + T; 
}

//CODE FOR AVOIDING LOSS OF DATA WHEN BACKSPACE KEY INVOKES history.back()
var InTextBox = false;

function SuppressBackspace(e){ 
	if (InTextBox == true){return;}
	if (C.ie) {
		thisKey = window.event.keyCode;
	}
	else {
		thisKey = e.keyCode;
	}

	var Suppress = false;

	if (thisKey == 8) {
		Suppress = true;
	}

	if (Suppress == true){
		if (C.ie){
			window.event.returnValue = false;	
			window.event.cancelBubble = true;
		}
		else{
			e.preventDefault();
		}
	}
}

if (C.ie){
	document.attachEvent('onkeydown',SuppressBackspace);
	window.attachEvent('onkeydown',SuppressBackspace);
}
else{
	if (window.addEventListener){
		window.addEventListener('keypress',SuppressBackspace,false);
	}
}

function ReduceItems(InArray, ReduceToSize){
	var ItemToDump=0;
	var j=0;
	while (InArray.length > ReduceToSize){
		ItemToDump = Math.floor(InArray.length*Math.random());
		InArray.splice(ItemToDump, 1);
	}
}

function Shuffle(InArray){
	var Num;
	var Temp = new Array();
	var Len = InArray.length;

	var j = Len;

	for (var i=0; i<Len; i++){
		Temp[i] = InArray[i];
	}

	for (i=0; i<Len; i++){
		Num = Math.floor(j  *  Math.random());
		InArray[i] = Temp[Num];

		for (var k=Num; k < (j-1); k++) {
			Temp[k] = Temp[k+1];
		}
		j--;
	}
	return InArray;
}

function WriteToInstructions(Feedback) {
	document.getElementById('InstructionsDiv').innerHTML = Feedback;

}




function EscapeDoubleQuotes(InString){
	return InString.replace(/"/g, '&quot;')
}

function TrimString(InString){
        var x = 0;

        if (InString.length != 0) {
                while ((InString.charAt(InString.length - 1) == '\u0020') || (InString.charAt(InString.length - 1) == '\u000A') || (InString.charAt(InString.length - 1) == '\u000D')){
                        InString = InString.substring(0, InString.length - 1)
                }

                while ((InString.charAt(0) == '\u0020') || (InString.charAt(0) == '\u000A') || (InString.charAt(0) == '\u000D')){
                        InString = InString.substring(1, InString.length)
                }

                while (InString.indexOf('  ') != -1) {
                        x = InString.indexOf('  ')
                        InString = InString.substring(0, x) + InString.substring(x+1, InString.length)
                 }

                return InString;
        }

        else {
                return '';
        }
}

function FindLongest(InArray){
	if (InArray.length < 1){return -1;}

	var Longest = 0;
	for (var i=1; i<InArray.length; i++){
		if (InArray[i].length > InArray[Longest].length){
			Longest = i;
		}
	}
	return Longest;
}

//UNICODE CHARACTER FUNCTIONS
function IsCombiningDiacritic(CharNum){
	var Result = (((CharNum >= 0x0300)&&(CharNum <= 0x370))||((CharNum >= 0x20d0)&&(CharNum <= 0x20ff)));
	Result = Result || (((CharNum >= 0x3099)&&(CharNum <= 0x309a))||((CharNum >= 0xfe20)&&(CharNum <= 0xfe23)));
	return Result;
}

function IsCJK(CharNum){
	return ((CharNum >= 0x3000)&&(CharNum < 0xd800));
}

//SETUP FUNCTIONS
//BROWSER WILL REFILL TEXT BOXES FROM CACHE IF NOT PREVENTED
function ClearTextBoxes(){
	var NList = document.getElementsByTagName('input');
	for (var i=0; i<NList.length; i++){
		if ((NList[i].id.indexOf('Guess') > -1)||(NList[i].id.indexOf('Gap') > -1)){
			NList[i].value = '';
		}
		if (NList[i].id.indexOf('Chk') > -1){
			NList[i].checked = '';
		}
	}
}

//EXTENSION TO ARRAY OBJECT
function Array_IndexOf(Input){
	var Result = -1;
	for (var i=0; i<this.length; i++){
		if (this[i] == Input){
			Result = i;
		}
	}
	return Result;
}
Array.prototype.indexOf = Array_IndexOf;

//IE HAS RENDERING BUG WITH BOTTOM NAVBAR
function RemoveBottomNavBarForIE(){
	if ((C.ie)&&(document.getElementById('Reading') != null)){
		if (document.getElementById('BottomNavBar') != null){
			document.getElementById('TheBody').removeChild(document.getElementById('BottomNavBar'));
		}
	}
}




//HOTPOTNET-RELATED CODE

var HPNStartTime = (new Date()).getTime();
var SubmissionTimeout = 30000;
var Detail = ''; //Global that is used to submit tracking data

function Finish(){
//If there's a form, fill it out and submit it
	if (document.store != null){
		Frm = document.store;
		Frm.starttime.value = HPNStartTime;
		Frm.endtime.value = (new Date()).getTime();
		Frm.mark.value = Score;
		Frm.detail.value = Detail;
		Frm.submit();
	}
}



var CorrectIndicator = 'Correcto';
var IncorrectIndicator = 'Incorrecto';
var YourScoreIs = 'Tu puntuaci&#x00F3;n es:';
var CorrectResponse = 'Correcto.';
var IncorrectResponse = 'Intenta otra vez. Las correspondencias incorrectas han sido borradas.';
var TotalUnfixedLeftItems = 0;
var TotCorrectChoices = 0;
var Penalties = 0;
var Finished = false;
var TimeOver = false;

var Score = 0;
var Locked = false;
var ShuffleQs = false;
var QsToShow = 12;


function StartUp(){
	RemoveBottomNavBarForIE();





	SetUpItems(ShuffleQs,QsToShow);

	TotalUnfixedLeftItems = document.getElementById('MatchDiv').getElementsByTagName('select').length;

//Create arrays
	CreateStatusArrays();


}

Status = new Array();


function CreateStatusArrays(){
	var Selects = document.getElementById('Questions').getElementsByTagName('select');
	for (var x=0; x<Selects.length; x++){
		Status[x] = new Array();
		Status[x][0] = 0; // Item not matched correctly yet
		Status[x][1] = 0; //Tries at this item so far
		Status[x][2] = Selects[x].id; //Store a ref to the original drop-down
	}
}

function GetKeyFromSelectContainer(Container){
	var Result = -1;
	if (Container.getElementsByTagName('select').length > 0){
		var Select = Container.getElementsByTagName('select')[0];
		if (Select != null){
			Result = parseInt(Select.id.substring(1, Select.id.length));
		}
	}
	return Result;
}

function GetKeyFromSelect(Select){
	var Result = -1;
	if (Select != null){
		Result = parseInt(Select.id.substring(1, Select.id.length));
	}
	return Result;
}

var OriginalKeys = new Array();
var ReducedKeys = new Array();

function GetUniqueKeys(Container, TargetArray){
	TargetArray.length = 0;
	var x = -1;
	var SList = Container.getElementsByTagName('select');
	if (SList.length > 0){
		for (var i=0; i<SList.length; i++){
			x = GetKeyFromSelect(SList[i]);
			if (TargetArray.indexOf(x) < 0){
				TargetArray.push(x);
			}
		}
	}
}

function SetUpItems(ShuffleQs, ReduceTo){
	var QList = new Array();
	var i, j, k, Selects, Options;

//Remove all the table rows and put them in an array for processing
	var Qs = document.getElementById('Questions');
	
//First, get a list of keys
	GetUniqueKeys(Qs, OriginalKeys);

//Remove the table rows to an array
	while (Qs.getElementsByTagName('tr').length > 0){
		QList.push(Qs.removeChild(Qs.getElementsByTagName('tr')[0]));
	}

	var Reducing = (QList.length > ReduceTo);
	
//If required, select random rows to delete
	if (Reducing == true){
		var DumpItem = 0;
		while (ReduceTo < QList.length){
	
//Get a number to delete from the array
			DumpItem = Math.floor(QList.length*Math.random());
			for (i=DumpItem; i<(QList.length-1); i++){
				QList[i] = QList[i+1];
			}
			QList.length = QList.length-1;
		}
	}
//Shuffle the rows if necessary
	if (ShuffleQs == true){
		QList = Shuffle(QList);
	}

	TotalUnfixedLeftItems = QList.length;
	
//Write the rows back to the table body
	for (i=0; i<QList.length; i++){
		Qs.appendChild(QList[i]);
	}
	
//Now we need to remove any drop-down options that no longer have associated select items
	if (Reducing == true){
		GetUniqueKeys(Qs, ReducedKeys);
		
		Selects = Qs.getElementsByTagName('select');
		for (i=0; i<Selects.length; i++){
			Options = Selects[i].getElementsByTagName('option');
			for (j=Options.length-1; j>=0; j--){
				if (OptionRequired(Options[j].value) == false){
					Selects[i].removeChild(Options[j]);
				}
			}
		}
	}
}

function OptionRequired(Key){
	if (ReducedKeys.indexOf(Key) > -1){
		return true;
	}
	else{
		if (OriginalKeys.indexOf(Key) > -1){
			return false;
		}
		else{
			return true;
		}
	}
}

function CheckAnswers(){
	if (Locked == true){return;}
	var Select = null;
	var Key = -1;
	var Parent = null;
	var Answer = null;
	var AnsText = '';
	var AllDone = true;
	TotCorrectChoices = 0;
	
//for each item not fixed or a distractor
	for (var i=0; i<Status.length; i++){
	
//if it hasn't been answered correctly yet
		if (Status[i][0] < 1){
		
//Add one to the number of tries for this item
			Status[i][1]++;
			
//Get a pointer to the drop-down
			Select = document.getElementById(Status[i][2]);
			Key = GetKeyFromSelect(Select);
			
//Check the answer
			if (Select.options[Select.selectedIndex].value == Key){
					Status[i][0] = 1;
					AnsText = Select.options[Select.selectedIndex].innerHTML;
					Parent = Select.parentNode;
					Parent.removeChild(Select);
					Parent.innerHTML = AnsText;
					Parent.nextSibling.innerHTML = CorrectIndicator;
			} 
			else{
				AllDone = false;
				Parent = Select.parentNode;
				Parent.nextSibling.innerHTML = IncorrectIndicator;
			}
		}
//If it's correct, count it
		if (Status[i][0] == 1){
			TotCorrectChoices++;
		}
	}
//Calculate the score
	Score = Math.floor(((TotCorrectChoices-Penalties)/TotalUnfixedLeftItems)*100);
	if (Score<0){Score = 0;}
	var Feedback = '';

//Build the feedback
	if (AllDone == true){
		Feedback = CorrectResponse + '<br />' + YourScoreIs + Score + '%.';
	}
	else{
		Feedback = IncorrectResponse + '<br />' + YourScoreIs + Score + '%.';
//Penalty for incorrect check
		Penalties++;
	}

//If the exercise is over, deal with that
	if ((AllDone == true)||(TimeOver == true)){


		TimeOver = true;
		Locked = true;
		Finished = true;
		setTimeout('Finish()', SubmissionTimeout);
		WriteToInstructions(Feedback);
	}

//Show the feedback
	ShowMessage(Feedback);
}









//-->

//]]>

</script>


		<link rel="stylesheet" type="text/css" href="../../../estilos/estilo.css">


</head>

<body onload="StartUp()" id="TheBody">

<!-- BeginTopNavButtons -->


<div class="NavButtonBar" id="TopNavBar">




<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)"  onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="location='cierre.htm'; return false;"> Cerrar </button>




</div>



<!-- EndTopNavButtons -->

<div class="Titles">
	<h2 class="ExerciseTitle">Esacala de Mercalli</h2>

	<h3 class="ExerciseSubtitle">Ejercicio de hacer correspondencias.</h3>
	<p class="ExerciseSubtitle">&nbsp;</p>
	<p class="ExerciseSubtitle" style="text-align: center">
	<object classid="clsid:D27CDB6E-AE6D-11CF-96B8-444553540000" id="obj1" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0" border="0" width="600" height="400">
		<param name="movie" value="Placas_tectonicas_terremotos[1].swf">
		<param name="quality" value="High">
		<embed src="Placas_tectonicas_terremotos[1].swf" pluginspage="http://www.macromedia.com/go/getflashplayer" type="application/x-shockwave-flash" name="obj1" width="600" height="400"></object>
	</p>
	<p class="ExerciseSubtitle" style="text-align: center">&nbsp;</p>
	<div class="Titles">
		<p class="txt" style="TEXT-ALIGN: center"><b>Fuente</b>: Presentaciones 
		educativas recopiladas de El País Digital &lt;<a href="http://www.elpais.es">http://www.elpais.es</a>&gt;</p>
		<p class="ExerciseSubtitle" style="TEXT-ALIGN: center">&nbsp;</p>
		<div style="font-size: 100%; color: #000033; border: 1px solid; padding-left: 4px; padding-right: 4px; padding-top: 1px; padding-bottom: 1px">
			<p style="TEXT-ALIGN: center">Observa con detenimiento la 
			diapositiva de medición de terremotos antes de contestar.</div>
		<p class="ExerciseSubtitle">&nbsp;</div>
	<p class="ExerciseSubtitle">&nbsp;</div>

<div id="InstructionsDiv" class="StdDiv">
	<p id="Instructions">Enlaza el grado de intensidad con el efecto producido.</p>
</div>



<div id="MainDiv" class="StdDiv">

<button id="CheckButton1" class="FuncButton" onmouseover="FuncBtnOver(this)" onfocus="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onblur="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckAnswers()">&nbsp;Comprobar&nbsp;</button>

<div id="MatchDiv" style="text-align: center;">

<form id="QForm" method="post" action="" onsubmit="return false;">
<table border="0" style="margin: 2em auto 2em auto;"><tbody id="Questions">

<tr><td class="LeftItem">Grado 1</td><td class="RightItem"><select id="s0_0"><option value="x">???<br /></option>
<option value="9">Los r&#x00ED;os se desbordan.</option>
<option value="3">Los coches parados se mueven.</option>
<option value="6">Es dif&#x00ED;cil permanecer en pie.</option>
<option value="7">Es dif&#x00ED;cil conducir.</option>
<option value="1">Perceptible en plantas altas de edificios.</option>
<option value="8">Algunos edificios se derrumban.</option>
<option value="11">El terreno se ondula.</option>
<option value="10">Los puentes se caen.</option>
<option value="0">Los animales se inquietan.</option>
<option value="5">Los &#x00E1;rboles se sacuden.</option>
<option value="2">Los objetos se balancean.</option>
<option value="4">Tiemblan los edificios.</option>
</select></td><td></td></tr><tr><td class="LeftItem">Grado 2</td><td class="RightItem"><select id="s1_1"><option value="x">???<br /></option>
<option value="9">Los r&#x00ED;os se desbordan.</option>
<option value="3">Los coches parados se mueven.</option>
<option value="6">Es dif&#x00ED;cil permanecer en pie.</option>
<option value="7">Es dif&#x00ED;cil conducir.</option>
<option value="1">Perceptible en plantas altas de edificios.</option>
<option value="8">Algunos edificios se derrumban.</option>
<option value="11">El terreno se ondula.</option>
<option value="10">Los puentes se caen.</option>
<option value="0">Los animales se inquietan.</option>
<option value="5">Los &#x00E1;rboles se sacuden.</option>
<option value="2">Los objetos se balancean.</option>
<option value="4">Tiemblan los edificios.</option>
</select></td><td></td></tr><tr><td class="LeftItem">Grado 3</td><td class="RightItem"><select id="s2_2"><option value="x">???<br /></option>
<option value="9">Los r&#x00ED;os se desbordan.</option>
<option value="3">Los coches parados se mueven.</option>
<option value="6">Es dif&#x00ED;cil permanecer en pie.</option>
<option value="7">Es dif&#x00ED;cil conducir.</option>
<option value="1">Perceptible en plantas altas de edificios.</option>
<option value="8">Algunos edificios se derrumban.</option>
<option value="11">El terreno se ondula.</option>
<option value="10">Los puentes se caen.</option>
<option value="0">Los animales se inquietan.</option>
<option value="5">Los &#x00E1;rboles se sacuden.</option>
<option value="2">Los objetos se balancean.</option>
<option value="4">Tiemblan los edificios.</option>
</select></td><td></td></tr><tr><td class="LeftItem">Grado 4</td><td class="RightItem"><select id="s3_3"><option value="x">???<br /></option>
<option value="9">Los r&#x00ED;os se desbordan.</option>
<option value="3">Los coches parados se mueven.</option>
<option value="6">Es dif&#x00ED;cil permanecer en pie.</option>
<option value="7">Es dif&#x00ED;cil conducir.</option>
<option value="1">Perceptible en plantas altas de edificios.</option>
<option value="8">Algunos edificios se derrumban.</option>
<option value="11">El terreno se ondula.</option>
<option value="10">Los puentes se caen.</option>
<option value="0">Los animales se inquietan.</option>
<option value="5">Los &#x00E1;rboles se sacuden.</option>
<option value="2">Los objetos se balancean.</option>
<option value="4">Tiemblan los edificios.</option>
</select></td><td></td></tr><tr><td class="LeftItem">Grado 5</td><td class="RightItem"><select id="s4_4"><option value="x">???<br /></option>
<option value="9">Los r&#x00ED;os se desbordan.</option>
<option value="3">Los coches parados se mueven.</option>
<option value="6">Es dif&#x00ED;cil permanecer en pie.</option>
<option value="7">Es dif&#x00ED;cil conducir.</option>
<option value="1">Perceptible en plantas altas de edificios.</option>
<option value="8">Algunos edificios se derrumban.</option>
<option value="11">El terreno se ondula.</option>
<option value="10">Los puentes se caen.</option>
<option value="0">Los animales se inquietan.</option>
<option value="5">Los &#x00E1;rboles se sacuden.</option>
<option value="2">Los objetos se balancean.</option>
<option value="4">Tiemblan los edificios.</option>
</select></td><td></td></tr><tr><td class="LeftItem">Grado 6</td><td class="RightItem"><select id="s5_5"><option value="x">???<br /></option>
<option value="9">Los r&#x00ED;os se desbordan.</option>
<option value="3">Los coches parados se mueven.</option>
<option value="6">Es dif&#x00ED;cil permanecer en pie.</option>
<option value="7">Es dif&#x00ED;cil conducir.</option>
<option value="1">Perceptible en plantas altas de edificios.</option>
<option value="8">Algunos edificios se derrumban.</option>
<option value="11">El terreno se ondula.</option>
<option value="10">Los puentes se caen.</option>
<option value="0">Los animales se inquietan.</option>
<option value="5">Los &#x00E1;rboles se sacuden.</option>
<option value="2">Los objetos se balancean.</option>
<option value="4">Tiemblan los edificios.</option>
</select></td><td></td></tr><tr><td class="LeftItem">Grado 7</td><td class="RightItem"><select id="s6_6"><option value="x">???<br /></option>
<option value="9">Los r&#x00ED;os se desbordan.</option>
<option value="3">Los coches parados se mueven.</option>
<option value="6">Es dif&#x00ED;cil permanecer en pie.</option>
<option value="7">Es dif&#x00ED;cil conducir.</option>
<option value="1">Perceptible en plantas altas de edificios.</option>
<option value="8">Algunos edificios se derrumban.</option>
<option value="11">El terreno se ondula.</option>
<option value="10">Los puentes se caen.</option>
<option value="0">Los animales se inquietan.</option>
<option value="5">Los &#x00E1;rboles se sacuden.</option>
<option value="2">Los objetos se balancean.</option>
<option value="4">Tiemblan los edificios.</option>
</select></td><td></td></tr><tr><td class="LeftItem">Grado 8</td><td class="RightItem"><select id="s7_7"><option value="x">???<br /></option>
<option value="9">Los r&#x00ED;os se desbordan.</option>
<option value="3">Los coches parados se mueven.</option>
<option value="6">Es dif&#x00ED;cil permanecer en pie.</option>
<option value="7">Es dif&#x00ED;cil conducir.</option>
<option value="1">Perceptible en plantas altas de edificios.</option>
<option value="8">Algunos edificios se derrumban.</option>
<option value="11">El terreno se ondula.</option>
<option value="10">Los puentes se caen.</option>
<option value="0">Los animales se inquietan.</option>
<option value="5">Los &#x00E1;rboles se sacuden.</option>
<option value="2">Los objetos se balancean.</option>
<option value="4">Tiemblan los edificios.</option>
</select></td><td></td></tr><tr><td class="LeftItem">Grado 9</td><td class="RightItem"><select id="s8_8"><option value="x">???<br /></option>
<option value="9">Los r&#x00ED;os se desbordan.</option>
<option value="3">Los coches parados se mueven.</option>
<option value="6">Es dif&#x00ED;cil permanecer en pie.</option>
<option value="7">Es dif&#x00ED;cil conducir.</option>
<option value="1">Perceptible en plantas altas de edificios.</option>
<option value="8">Algunos edificios se derrumban.</option>
<option value="11">El terreno se ondula.</option>
<option value="10">Los puentes se caen.</option>
<option value="0">Los animales se inquietan.</option>
<option value="5">Los &#x00E1;rboles se sacuden.</option>
<option value="2">Los objetos se balancean.</option>
<option value="4">Tiemblan los edificios.</option>
</select></td><td></td></tr><tr><td class="LeftItem">Grado 10</td><td class="RightItem"><select id="s9_9"><option value="x">???<br /></option>
<option value="9">Los r&#x00ED;os se desbordan.</option>
<option value="3">Los coches parados se mueven.</option>
<option value="6">Es dif&#x00ED;cil permanecer en pie.</option>
<option value="7">Es dif&#x00ED;cil conducir.</option>
<option value="1">Perceptible en plantas altas de edificios.</option>
<option value="8">Algunos edificios se derrumban.</option>
<option value="11">El terreno se ondula.</option>
<option value="10">Los puentes se caen.</option>
<option value="0">Los animales se inquietan.</option>
<option value="5">Los &#x00E1;rboles se sacuden.</option>
<option value="2">Los objetos se balancean.</option>
<option value="4">Tiemblan los edificios.</option>
</select></td><td></td></tr><tr><td class="LeftItem">Grado 11</td><td class="RightItem"><select id="s10_10"><option value="x">???<br /></option>
<option value="9">Los r&#x00ED;os se desbordan.</option>
<option value="3">Los coches parados se mueven.</option>
<option value="6">Es dif&#x00ED;cil permanecer en pie.</option>
<option value="7">Es dif&#x00ED;cil conducir.</option>
<option value="1">Perceptible en plantas altas de edificios.</option>
<option value="8">Algunos edificios se derrumban.</option>
<option value="11">El terreno se ondula.</option>
<option value="10">Los puentes se caen.</option>
<option value="0">Los animales se inquietan.</option>
<option value="5">Los &#x00E1;rboles se sacuden.</option>
<option value="2">Los objetos se balancean.</option>
<option value="4">Tiemblan los edificios.</option>
</select></td><td></td></tr><tr><td class="LeftItem">Grado 12</td><td class="RightItem"><select id="s11_11"><option value="x">???<br /></option>
<option value="9">Los r&#x00ED;os se desbordan.</option>
<option value="3">Los coches parados se mueven.</option>
<option value="6">Es dif&#x00ED;cil permanecer en pie.</option>
<option value="7">Es dif&#x00ED;cil conducir.</option>
<option value="1">Perceptible en plantas altas de edificios.</option>
<option value="8">Algunos edificios se derrumban.</option>
<option value="11">El terreno se ondula.</option>
<option value="10">Los puentes se caen.</option>
<option value="0">Los animales se inquietan.</option>
<option value="5">Los &#x00E1;rboles se sacuden.</option>
<option value="2">Los objetos se balancean.</option>
<option value="4">Tiemblan los edificios.</option>
</select></td><td></td></tr>

</tbody></table>
</form>
</div>

<button id="CheckButton2" class="FuncButton" onmouseover="FuncBtnOver(this)" onfocus="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onblur="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckAnswers()">&nbsp;Comprobar&nbsp;</button>

</div>



<div class="Feedback" id="FeedbackDiv">
<div class="FeedbackText" id="FeedbackContent"></div>
<button id="FeedbackOKButton" class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="HideFeedback(); return false;">&nbsp;Aceptar&nbsp;</button>
</div>

<!-- BeginBottomNavButtons -->


<div class="NavButtonBar" id="BottomNavBar">




<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)"  onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="location='cierre.htm'; return false;"> Cerrar </button>




</div>



<!-- EndBottomNavButtons -->

<!-- BeginSubmissionForm -->

<!-- EndSubmissionForm -->

</body>

</html>
