<html>
<head><meta name="author" content="Created with Hot Potatoes by Half-Baked Software, registered to Belen Sanchez."></meta><meta name="keywords" content="Hot Potatoes, Half-Baked Software, Windows, University of Victoria"></meta>
<title>
Crucigrama
</title>

<script language="javascript" type="text/javascript">

//<![CDATA[

<!--

// BrowserCheck Object

function BrowserCheck() {
	var b = navigator.appName
//HBS extension
	this.mac = (navigator.appVersion.indexOf('Mac') != -1)
	if (b=="Netscape") this.b = "ns"
	else if (b=="Microsoft Internet Explorer") this.b = "ie"
	else this.b = b
	this.version = navigator.appVersion
	this.v = parseInt(this.version)
	this.ns = (this.b=="ns" && this.v>=4)
	this.ns4 = (this.b=="ns" && this.v==4)
	this.ns5 = (this.b=="ns" && this.v==5)
	this.ie = (this.b=="ie" && this.v>=4)
	this.ie4 = (this.version.indexOf('MSIE 4')>0)
	this.ie5 = (this.version.indexOf('MSIE 5')>0)
	this.min = (this.ns||this.ie)
	this.CRAPBrowser = (this.ie && this.mac); //Cannot Resolve Addresses Properly
}

is = new BrowserCheck();

var LocFolder = GetFolder(window.location.href);
function GetFolder(LocPath){
	LocPath = ReplaceStuff('\'','%27',LocPath);
	var i = LocPath.lastIndexOf('/');
	if (i<0){i=LocPath.lastIndexOf('\\')};
	return LocPath.substring(0,i);
}

function CombineURLs(InURL){
	var i = InURL.indexOf('../');
	var s = LocFolder;
	while (i >- 1){
		s = GetFolder(s);
		InURL = InURL.substring(3,InURL.length);
		i = InURL.indexOf('../');
	}
	return s + '/' + InURL;
}

x = new Array();
function ResolveURLs(InText,Attribute){
	x.length=0;
	var Temp = InText.toLowerCase();
	var z;
	var AttLen = Attribute.length + 2;
	var y=Temp.lastIndexOf(Attribute + '="');
	while (y>-1){
		var sLoc = y+AttLen;
		if (Temp.substring(sLoc,sLoc+5) != 'http:'){
			x[x.length]=new Array();
			x[x.length-1][0] = sLoc;
			z = Temp.indexOf('"',sLoc);
			x[x.length-1][1] = z;
			x[x.length-1][2] = InText.substring(sLoc,z);

		}
		Temp = Temp.substring(0,y);
		y=Temp.lastIndexOf(Attribute + '="');
	}
	for (var j=0; j<x.length; j++){
		InText = InText.substring(0,x[j][0]) + CombineURLs(x[j][2]) + InText.substring(x[j][1], InText.length);
	}
	return InText;
}

function ResolveAllURLs(Stuff){
	Stuff = ResolveURLs(Stuff,'href');
	Stuff = ResolveURLs(Stuff,'src');
	Stuff = ResolveURLs(Stuff,'parent.location');
	return Stuff;
}

if (is.ie){
	var BoxSize = '1';
}
else{
	var BoxSize = '2';
}

var CurrentBox = -1;
var Feedback = '';
var CluesAcross = 'Across:';
var CluesDown = 'Down:';
var Correct = 'Correct! Well done.';
var Incorrect = 'Some of your answers are incorrect. Incorrect squares have been blanked out.'; 
var GiveHint = 'A correct letter has been added.';
var YourScoreIs = 'Tu puntuaci&#243;n es:';
var Instructions = 'Completa el crucigrama. Para ello tendr&#225;s que pinchar en los n&#250;meros, leer la pista, escribir tu respuesta, hacer clic en el bot&#243;n respuesta. Para comprobar si tu respuesta es correcta pincha en "Comprobar".';
var BuiltGrid = '';
var BuiltClues = '';
var BuiltExercise = '';
var Penalties = 0;
var ExerciseSubtitle = '';
var ExerciseTitle = 'Crucigrama';
var FirstShow = true;
var ReadingURL = '';

var PreviousPage = history.length;
var CurrBoxElement = null;







var NavBar='';


NavBar+='<tr><form name="NavButtons1"><td bgcolor="#bbddbb" align="center">';
NavBar+='<font face="Geneva,Arial" size="-1">';

NavBar+='<input type="button" value="Volver" onclick="parent.GoBack()"></input>';



NavBar+='</font></td></form></tr>';
if (is.CRAPBrowser){NavBar=ResolveAllURLs(NavBar);}


var TitleCode = '<tr><td align="center" valign="middle" bgcolor="#e6ffe6">';
TitleCode += '<font size="+1" face="Geneva,Arial" color="#006666">' + ExerciseTitle + '</font><br />';
TitleCode += '<font size="-1" face="Geneva,Arial" color="#006666">' + ExerciseSubtitle + '<br />';

TitleCode += '</font></td></tr>';

var GridOpener = '<tr><td align="center" valign="middle" bgcolor="#d1e9d1"><table border="1" cellpadding="0" cellspacing="0">';
var GridRowOpener = '<tr>';
var GridRowCloser = '</tr>';

var BlankCell = '<td bgcolor="#000000" width="30" height="30">&nbsp;</td>';
var LetterOnlyCell = '<td bgcolor="#FFFFFF" width="30" height="30" align="center" valign="middle"><b><font color="#000000">[Letter]</font></b></td>';
var NumLetterCell = '<td bgcolor="#FFFFFF" width="30" height="30" align="center" valign="top" onclick="parent.ShowClue([ClueNum],[x],[y])" style="cursor: pointer; cursor: hand;"><sup><u>';

if (! is.CRAPBrowser){
	NumLetterCell += '<a href="javascript:parent.DoNothing()" onclick="parent.ShowClue([ClueNum],[x],[y])">[ClueNum]</a>';
}
else{
	NumLetterCell += '[ClueNum]';
}
NumLetterCell += '</u></sup>&nbsp;<b><font color="#000000">[Letter]</font></b></td>';

var GridCloser = '</table></td></tr>';

var Buttons = '<tr><form name="Buttons[Num]" action=""><td align="center" valign="top" bgcolor="#d1e9d1">';
Buttons += '<font face="Geneva,Arial" color="#000000">';
Buttons += '<input type="button" value="&#161;Compruebalo!" onclick="parent.CheckAnswers()"></input>';
Buttons += '</font></td></form></tr>';

var Buttons1 = ReplaceStuff('[Num]', '1', Buttons);
var Buttons2 = ReplaceStuff('[Num]', '2', Buttons);

var GetAnswerOpener = '<form name="AnswerForm" action="" onSubmit="return false;">';
var GetAnswer = ' <font size="3"><input type="text" name="[BoxName]" size="[AnsLength]" maxlength="[AnsLength]"></input>';
GetAnswer += ' <input type="button" value="Enter" ';
GetAnswer += 'onClick="parent.EnterAnswer(document.AnswerForm.[BoxName].value,[boolAcross],[AnsLength],[x],[y])"></input>';


GetAnswer += '<input type="button" value="Pista" onclick="parent.ShowHint([boolAcross],[x],[y],\'[FrameName].document.AnswerForm.[BoxName]\')"></input>';


GetAnswer += '</font>';

var GetAnswerCloser = '</form>';

function GoBack(){
	var BackSkip = history.length - PreviousPage;
	if (BackSkip > 0){
		history.go((BackSkip+1)*-1);
	}
	else{
		parent.history.back();
	}
}





function BuildExercise(){
	var OutString = '';
	var Temp = '';
	var GridStuff = GridOpener;	

	for (var i=0; i<L.length; i++){
		GridStuff += GridRowOpener;
		for (var j=0; j<L[i].length; j++){
//If the cell is blank, add a black cell
			if (L[i][j] == ''){
				GridStuff += BlankCell;
			}
//else there's a letter there
			else{
//If there's a clue number, add it
				if (C[i][j] > 0){
					Temp = NumLetterCell;
					Temp = ReplaceStuff('[ClueNum]', C[i][j], Temp);
//Add location info
					Temp = ReplaceStuff('[x]', i, Temp);
					Temp = ReplaceStuff('[y]', j, Temp);
				}
//Otherwise add a blank cell
				else{
					Temp = LetterOnlyCell;
				}

//If the cell is already answered, add the letter from the Guess array
				if (G[i][j] != ''){
					Temp = ReplaceStuff('[Letter]', G[i][j], Temp);
				}
//Otherwise, put in a non-breaking space
				else{
					Temp = ReplaceStuff('[Letter]', '&nbsp;', Temp);
				}
				GridStuff += Temp;
			}
		}
		GridStuff += GridRowCloser;
	}

	GridStuff += GridCloser;

//Put the final pieces together
	OutString = GridStuff;
	BuiltExercise = OutString;
}

function WriteFeedback(Feedback) {
	if (is.CRAPBrowser){Feedback=ResolveAllURLs(Feedback);}
//Build the output string
	var OutString = '';
	OutString += '<html>';
	OutString += '<body  background="" bgcolor="#e6ffe6" text="#000000" link="#0000ff" vlink="#0000cc">';
	OutString += '<center><table border="0" cellpadding="5" cellspacing="1" width="85%">';
	OutString += NavBar;
	if (Feedback.length>0){
		OutString += '<tr><td bgcolor="#d1e9d1" align="center">'; 
		OutString += '<font face="Geneva,Arial" size="-1" color="#000000">';
		OutString += Feedback;
		OutString += '</font></td></tr>'
	}
	OutString += '</table></center></body></html>';
//Write it to the frame
	TopFrame.document.clear();
	TopFrame.document.open();
	TopFrame.document.write(OutString);
	TopFrame.document.close();
}

function DisplayExercise(){
//Build the output string
	var OutString = '';
	OutString += '<html>';
	OutString += '<body  background="" bgcolor="#e6ffe6" text="#000000" link="#0000ff" vlink="#0000cc">';
	OutString += '<center><table border="0" cellpadding="5" cellspacing="1" width="85%">';
	OutString += TitleCode;
	OutString += Buttons1; 
	OutString += BuiltExercise;
	OutString += Buttons2;
	OutString += BuiltClues;
	OutString += NavBar;
	OutString += '</table></center></body></html>';

	if (is.CRAPBrowser){OutString=ResolveAllURLs(OutString);}

//Write it to the frame
	BottomFrame.document.clear();
	BottomFrame.document.open();
	BottomFrame.document.write(OutString);
	BottomFrame.document.close();
}

function BuildClue(ClueNum,x,y,Across){
	var OutString = '';
	if (Across == true){
		if (ClueNum >= A.length){
			return '';
		}	
		if (A[ClueNum] == null){
			return '';
		}
		OutString = ClueNum + '. ' + A[ClueNum];
		OutString += GetAnswer;
		OutString = ReplaceStuff('[BoxName]', 'BA'+ClueNum, OutString);
//Find out how long the answer is
		AnsLength = 0;
		i = x;
		j = y;
		while (j<L[i].length){
			if (L[i][j] != ''){
				AnsLength++;
			}
			else{
				break;
			}
			j++;
		}
		OutString = ReplaceStuff('[AnsLength]', AnsLength, OutString);
		OutString = ReplaceStuff('[boolAcross]', 'true', OutString);
	}
	else{
		if (ClueNum >= D.length){
			return '';
		}	
		if (D[ClueNum] == null){
			return '';
		}
		OutString = ClueNum + '. ' + D[ClueNum];
		OutString += GetAnswer;
		OutString = ReplaceStuff('[BoxName]', 'BD'+ClueNum, OutString);
//Find out how long the answer is
		AnsLength = 0;
		i = x;
		j = y;
		while (i<L.length){
			if (L[i][j] != ''){
				AnsLength++;
			}
			else{
				break;
			}
			i++;
		}
		OutString = ReplaceStuff('[AnsLength]', AnsLength, OutString);
		OutString = ReplaceStuff('[boolAcross]', 'false', OutString);
	}
	OutString = ReplaceStuff('[x]', x ,OutString);
	OutString = ReplaceStuff('[y]', y, OutString);
	OutString = ReplaceStuff('[FrameName]', 'BottomFrame', OutString);
	OutString += '<br />';
	return OutString;
}



function ShowClue(ClueNum,x,y){
	var OutString = '';
	var AnsLength = 0;
	var i;
	var j;
	CurrBoxElement = ClueNum;
	if (A[ClueNum] != null){
		OutString = OutString + 'Across: ' + ClueNum + '. ' + A[ClueNum];
		OutString += GetAnswer;
		OutString = ReplaceStuff('[BoxName]', 'BA'+ClueNum, OutString);
//Find out how long the answer is
		AnsLength = 0;
		i = x;
		j = y;
		while (j<L[i].length){
			if (L[i][j] != ''){
				AnsLength++;
			}
			else{
				break;
			}
			j++;
		}
		OutString = ReplaceStuff('[AnsLength]', AnsLength, OutString);
		OutString = ReplaceStuff('[boolAcross]', 'true', OutString);
	}
	if (D[ClueNum] != null){
		if (OutString.length > 0){
			OutString += '<br />';
		}
		OutString = OutString + 'Down: ' + ClueNum + '. ' + D[ClueNum];
		OutString += GetAnswer;
		OutString = ReplaceStuff('[BoxName]', 'BD'+ClueNum, OutString);
//Find out how long the answer is
		AnsLength = 0;
		i = x;
		j = y;
		while (i<L.length){
			if (L[i][j] != ''){
				AnsLength++;
			}
			else{
				break;
			}
			i++;
		}
		OutString = ReplaceStuff('[AnsLength]', AnsLength, OutString);
		OutString = ReplaceStuff('[boolAcross]', 'false', OutString);
	}
	OutString = GetAnswerOpener + OutString + GetAnswerCloser;
	OutString = ReplaceStuff('[x]', x ,OutString);
	OutString = ReplaceStuff('[y]', y, OutString);
	OutString = ReplaceStuff('[FrameName]', 'TopFrame', OutString);
	WriteFeedback(OutString); 
	if (eval('TopFrame.document.AnswerForm.BA' + ClueNum) != null){
		eval('TopFrame.document.AnswerForm.BA' + ClueNum).focus();
	}
	else{
		if (eval('TopFrame.document.AnswerForm.BD' + ClueNum) != null){
			eval('TopFrame.document.AnswerForm.BD' + ClueNum).focus();
		}
	}
}

function EnterAnswer(Guess,Across,AnsLength,x,y){

	Guess = Guess.toUpperCase();

	var i=x;
	var j=y;
	var Letter = 0;
	while (Letter < AnsLength){
		if (Letter < Guess.length){
			G[i][j] = Guess.charAt(Letter);
		}
		if (Across == true){
			j++;
		}
		else{
			i++;
		}
		Letter++;
	}

	BuildExercise();
	DisplayExercise();
}

function ShowHint(Across,x,y,BoxName){
	var i=x;
	var j=y;
	var OutString = '';
	if (Across==true){
		while (j<L[i].length){
			if (L[i][j] != ''){
				OutString += L[i][j];
				if (G[i][j] != L[i][j]){
					G[i][j] = L[i][j];
					Penalties++;
					break;
				}
			}
			else{
				break;
			}
		j++;
		}
	}
	else{
		while (i<L.length){
			if (L[i][j] != ''){
				OutString += L[i][j];
				if (G[i][j] != L[i][j]){
					G[i][j] = L[i][j];
					Penalties++;
					break;
				}
			}
			else{
				break;
			}
		i++;
		}
	}
	if (eval(BoxName) != null){
		eval(BoxName).value = OutString;
	}
}

function ReplaceStuff(Token, Replacement, InString){
	var i = InString.indexOf(Token);
	var FirstBit = '';
	var LastBit = '';
	while (i>-1){
		FirstBit = InString.substring(0, i);
		LastBit = InString.substring(i + Token.length, InString.length);	
		InString = FirstBit + Replacement + LastBit;
		i = InString.indexOf(Token);
	}
	return InString;
}

L = new Array();
L[0] = new Array('P','A','R','A','S','I','T','I','S','M','O','');
L[1] = new Array('','M','E','C','','T','E','S','I','S','','E');
L[2] = new Array('C','A','D','E','N','A','','O','M','O','R','C');
L[3] = new Array('O','','T','N','T','','','T','B','','E','O');
L[4] = new Array('N','O','R','T','E','','C','O','I','T','O','S');
L[5] = new Array('S','','O','O','','A','R','P','O','N','','I');
L[6] = new Array('U','','F','','A','M','','O','S','','S','S');
L[7] = new Array('M','E','I','O','S','I','S','','I','T','I','T');
L[8] = new Array('I','','C','I','C','L','O','','S','U','M','E');
L[9] = new Array('D','I','A','D','A','','','','','T','A','M');
L[10] = new Array('O','I','','O','S','M','O','S','I','S','','A');
L[11] = new Array('R','I','O','S','','S','O','H','C','I','N','');


C = new Array();
C[0] = new Array(1,2,3,4,0,5,6,7,8,9,0,0);
C[1] = new Array(0,10,0,0,0,11,0,0,0,0,0,12);
C[2] = new Array(13,0,0,0,14,0,0,15,0,0,16,0);
C[3] = new Array(0,0,17,0,0,0,0,18,0,0,19,0);
C[4] = new Array(20,0,0,0,0,0,21,0,0,22,0,0);
C[5] = new Array(0,0,23,0,0,24,0,0,0,0,0,0);
C[6] = new Array(0,0,0,0,25,0,0,26,0,0,27,0);
C[7] = new Array(28,0,0,29,0,0,30,0,31,32,0,0);
C[8] = new Array(0,0,33,0,0,0,0,0,34,0,0,0);
C[9] = new Array(35,36,0,0,0,0,0,0,0,37,0,0);
C[10] = new Array(38,0,0,39,0,40,41,42,43,0,0,0);
C[11] = new Array(44,0,0,0,0,45,0,0,0,0,0,0);


G = new Array();
G[0] = new Array('','','','','','','','','','','','');
G[1] = new Array('','','','','','','','','','','','');
G[2] = new Array('','','','','','','','','','','','');
G[3] = new Array('','','','','','','','','','','','');
G[4] = new Array('','','','','','','','','','','','');
G[5] = new Array('','','','','','','','','','','','');
G[6] = new Array('','','','','','','','','','','','');
G[7] = new Array('','','','','','','','','','','','');
G[8] = new Array('','','','','','','','','','','','');
G[9] = new Array('','','','','','','','','','','','');
G[10] = new Array('','','','','','','','','','','','');
G[11] = new Array('','','','','','','','','','','','');


A = new Array();
A[1]='Relaci&#243;n interespec&#237;fica con ganancia para uno y p&#233;rdida para otro. ';
A[10]='Siglas del Ministerio de Educaci&#243;n y Cultura. ';
A[11]='Requisito imprescindible para ser Doctor.';
A[13]='Relaci&#243;n lineal en un ecosistema en funci&#243;n de qui&#233;n se come a qui&#233;n. ';
A[15]='Elemento qu&#237;mico al rev&#233;s';
A[17]=' Trinitrotolueno. ';
A[18]='Televisi&#243;n con falta de ortograf&#237;a';
A[19]=' R&#237;a gallega';
A[20]='Punto cardinal. ';
A[21]='Actos sexuales. ';
A[23]='Doble ox&#237;geno. ';
A[24]='Utensilio de pesca. ';
A[25]=' Americio. ';
A[26]='Pronombre presonal. ';
A[27]='Organizaci&#243;n nazi. ';
A[28]='Divisi&#243;n celular encargada de la fabricaci&#243;n de gametos sexuales.';
A[31]=' Mono al rev&#233;s. ';
A[33]='Lo que describen los elementos qu&#237;micos en la naturaleza.';
A[34]=' Realice una operaci&#243;n matem&#225;tica.  ';
A[35]='Fiesta catalana. ';
A[37]='Sonido del tambor. ';
A[38]='Escuch&#233;.';
A[39]=' Movimiento del agua entre membranas.';
A[44]='Corrientes de agua que van a parar al mar.';
A[45]=' Son ecol&#243;gicos, donde viven los seres vivos en un ecosistema (al rev&#233;s), tambi&#233;n frecuentes en los cementerios.';


D = new Array();
D[2]='Quiere. ';
D[3]='Lo que se establece entre las cadenas tr&#243;ficas de un ecosistema. ';
D[4]='S&#237;mbolo ortogr&#225;fico. ';
D[5]='Diminutivo femenino. ';
D[6]=' Infusi&#243;n. ';
D[7]='Forma de un elemento qu&#237;mico. ';
D[8]='Relaci&#243;n entre dos especies de seres vivos con beneficio para ambas.';
D[9]='Siglas de la Organizaci&#243;n Mundial de la Salud, descolocadas. ';
D[12]=' La relaci&#243;n entre biocenosis y biotopo. ';
D[13]='Segundo nivel tr&#243;fico de una cadena. ';
D[14]='Un ser, sin la e inicial.';
D[16]='Preso. ';
D[21]='S&#237;mbolo qu&#237;mico del cromo.';
D[22]='Pon Tn y acertar&#225;s. ';
D[24]='Capital de Per&#250;.';
D[25]=' Forma de reproducci&#243;n de algunos hongos. ';
D[27]='Cueva subterr&#225;nea en vertical.';
D[29]='Organo de los sentidos.';
D[30]='Para parar a las bestias.';
D[32]=' Etnia africana. ';
D[36]='Tres yodos seguidos. ';
D[40]='Editorial de libros de texto "Santa Mar&#237;a" al rev&#233;s.';
D[41]=' Dos ox&#237;genos juntos.';
D[42]='Hidr&#243;xido de azufre al rev&#233;s. ';
D[43]='Dos n&#250;meros romanos juntos.';


function StartUp(){

	BuildExercise();

	WriteFeedback(Instructions);
	DisplayExercise();





}
function CheckAnswers(){

	var AllCorrect = true;
	var TotLetters = 0;
	var CorrectLetters = 0;

//Check each letter
	for (var i=0; i<L.length; i++){
		for (var j=0; j<L[i].length; j++){
			if (L[i][j] != ''){
				TotLetters++;
				if (G[i][j] != L[i][j]){
					G[i][j] = '';
					AllCorrect = false;
				}
				else{
					CorrectLetters++;
				}
			}
		}
	}

	var Score = Math.floor(((CorrectLetters-Penalties) * 100)/TotLetters);

//Compile the output
	var Output = '';

	if (AllCorrect == true){
		Output = Correct + '<br />';
	}

	Output += YourScoreIs + ' ' + Score + '%.<br />';
	if (AllCorrect == false){
		Output += '<br />' + Incorrect;
		Penalties++;
	}
	BuildExercise();
	WriteFeedback(Output);

		


	DisplayExercise();
}



function DoNothing(){}

function Blank(){
	return '<html><body>&copy;Half-Baked Software. Loading...</body></html>';
}

//-->

//]]>

</script>


</head>
<!--<body>Fool those dumb ad-inserting ISPs</body>-->

<!--For full XHTML 1.0 compatibility, remove the border and framespacing attributes.
These are required for proper display in current browsers, but render the document incompatible. Then, you'll need to add the appropriate Document Type Declaration; use
the W3C XHTML 1 frameset DTD.-->


<frameset rows="30%,*" framespacing="0" border="0" onload="StartUp()">
	<frame src="javascript:parent.Blank()" frameborder="0" name="TopFrame"></frame>
	<frame src="javascript:parent.Blank()" frameborder="0" name="BottomFrame"></frame>
</frameset>




</html>
