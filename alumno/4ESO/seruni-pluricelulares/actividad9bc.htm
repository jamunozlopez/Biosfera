<HTML>
<HEAD><meta name="author" content="Created with Hot Potatoes by Half-Baked Software, registered to Belen Sanchez."><meta name="keywords" content="Hot Potatoes, Half-Baked Software, Windows, University of Victoria">
<TITLE>
Actividad 9: las partes m&aacute;s peque&ntilde;as
</TITLE>
<!--<BODY>Fool those dumb ad-inserting ISPs</BODY>-->
<SCRIPT LANGUAGE="JavaScript">

var TopNextExButton = '<FORM><INPUT TYPE="button" VALUE="=>" onClick="parent.location=\'nextpage.htm\'"></FORM>';

var Feedback = '';
var CorrectResponse = '&#161;Correcto!';
var TheseAnswersToo = 'Hay otras respuestas correctas: ';
var ThisMuchIsCorrect = 'Esta parte de tu respuesta es correcta: ';
var TheseWordsAppear = 'Estas palabras aparecen en la respuesta: ';
var IncorrectResponse = '&#161;Lo sentimos! Int&eacute;ntalo de nuevo.';
var EnterGuess = 'Intenta adivinar.';
var GiveHint = 'La siguiente letra de la respuesta es: ';
var TheseCorrect = 'Respuestas acertadas: ';
var CaseSensitive = false;
var platform = 'win';
var ContinuousScoring = true;
var CorrectFirstTime = 'Preguntas acertadas a la primera: '; 
var YourScoreIs = 'Tu puntuaci&oacute;n es:'; 

var min
var sec
var ShowReadingAgain = 'Mostrar el texto de nuevo';
var FocusBoxes = true;

function DownTime(mm,ss){
	min = mm;
	sec = ss;

	if (sec==0) {
		sec = 60;
		min--;
	}

	sec--;
	if (sec<10){
		sec="0" + sec;
	}

	if (parent.TimerFrame.document.TimerForm.face == null){
		return;
	}

	parent.TimerFrame.document.TimerForm.face.value= min+":"+sec;
	if ((min==0) && (sec==0)){
		TimesUp()
	}
	else{
		setTimeout('DownTime(min,sec)',1000)
	}
}

function StartReading(){
	Stuff='Tiempo restante:';
	Stuff+=' <INPUT TYPE="text" NAME="face" SIZE="6" VALUE="1:00">';
	WriteToTimer(Stuff);
	parent.ReadingFrame.location.href='actividad9br.htm';
	timeoutID=setTimeout('DownTime(1,0)',1000);
}

function TimesUp() {
	if (ShowReadingAgain.length > 0) {
		Stuff='<INPUT TYPE="Hidden" NAME="ThisAvoidsNavigator3Bug">';
		Stuff+='<INPUT TYPE="Button" NAME="StartIt" VALUE="Mostrar el texto de nuevo" onClick="parent.CodeFrame.StartReading()">';
		WriteToTimer(Stuff);
	}
	WriteToReading('&#161;El tiempo ha terminado!');
}

function WriteToReading(Stuff) {
	parent.ReadingFrame.document.clear();
	parent.ReadingFrame.document.open();
	parent.ReadingFrame.document.writeln ('<HTML>');
	parent.ReadingFrame.document.writeln ('<BODY  BACKGROUND="" BGCOLOR="#e6ffe6" TEXT="#000000" LINK="#0000ff" VLINK="#0000cc">');
	parent.ReadingFrame.document.writeln ('<CENTER><TABLE BORDER="0" CELLPADDING="5" CELLSPACING="1" WIDTH="85%">');
	parent.ReadingFrame.document.writeln ('<TR><TD BGCOLOR="#d1e9d1" ALIGN="CENTER">') 
	parent.ReadingFrame.document.writeln ('<FONT FACE="Geneva,Arial" SIZE="-1">');
	parent.ReadingFrame.document.writeln (Stuff);
	parent.ReadingFrame.document.writeln ('</FONT></TD></TR></TABLE></CENTER></BODY></HTML>');
	parent.ReadingFrame.document.close();
}

function WriteToTimer(Stuff){
	parent.TimerFrame.document.clear();
	parent.TimerFrame.document.open();
	parent.TimerFrame.document.writeln ('<HTML>');
	parent.TimerFrame.document.writeln ('<BODY  BACKGROUND="" BGCOLOR="#e6ffe6" TEXT="#000000" LINK="#0000ff" VLINK="#0000cc">');
	parent.TimerFrame.document.writeln ('<CENTER><TABLE BORDER=\"0\" CELLPADDING=\"5\" CELLSPACING=\"1\" WIDTH="85%">');
	parent.TimerFrame.document.writeln ('<FORM NAME="TimerForm"><TR><TD BGCOLOR="#d1e9d1" ALIGN="CENTER">') 
	parent.TimerFrame.document.writeln ('<FONT FACE="Geneva,Arial" SIZE="-1">');
	parent.TimerFrame.document.writeln (Stuff);
	parent.TimerFrame.document.writeln ('</FONT></TD></TR></FORM></TABLE></CENTER></BODY></HTML>');
	parent.TimerFrame.document.close();
}

var CurrentQ = 0;

var RealGuess = '';

State = new Array();

Answers = new Array();

Answers[0] = new Array();
Answers[0][0]='Bacteria y Geranio ';
Answers[0][1]='La bacteria y el geranio';
Answers[0][2]='Bacteria y planta';
Answers[0][3]='la bacteria y la planta';
Answers[0][4]='Geranio y Bacteria';
Answers[0][5]='el geranio y la bacteria';
Answers[0][6]='planta y bacteria';
Answers[0][7]='la planta y la bacteria';


var LowerString='abcdefghijklmnopqrstuvwxyz%9A%9C%E0%E1%E2%E3%E4%E5%E6%E7%E8%E9%EA%EB%EC%ED%EE%EF%F0%F1%F2%F3%F4%F5%F6%F8%F9%FA%FB%FC%FD%FE%FF';
var UpperString='ABCDEFGHIJKLMNOPQRSTUVWXYZ%8A%8C%C0%C1%C2%C3%C4%C5%C6%C7%C8%C9%CA%CB%CC%CD%CE%CF%D0%D1%D2%D3%D4%D5%D6%D8%D9%DA%DB%DC%DD%DE%9F';

LowerString = unescape(LowerString);
UpperString = unescape(UpperString);

var isIE = false;

function StartUp(){
	var i = 0;

	platform = 'win';
	if ((navigator.appVersion.indexOf('Mac') != -1)&&(navigator.appName.indexOf('Microsoft') < 0)) {
		platform = 'mac';
		FocusBoxes = false;
	}

	State.length = 0;
	for (i=0; i<Answers.length; i++){
		State[i] = new Array();
		State[i][0] = 0; // question done or not
		State[i][1] = 0; // wrong checks
		State[i][2] = 0; // hints asked for
		State[i][3] = ''; // student's answer
		State[i][4] = 0; // score for this question
	}

	if (parent.TimerFrame != null) {
		Stuff='<INPUT TYPE="Button"';
		Stuff+=' NAME="StartIt" VALUE="Leer" onClick="parent.CodeFrame.StartReading()">';
		WriteToReading('Pincha aqu&iacute; para ver el texto.');
		WriteToTimer(Stuff);
	}
	if (FocusBoxes==true){
		document.QForm1.Guess.focus();
	}
}

function ConvertCase(InString, Direction){

	var FromString = '';
	var ToString = '';

	if (Direction == 0){
		FromString = UpperString;
		ToString = LowerString;
	}
	else{
		FromString = LowerString;
		ToString = UpperString;
	}

	var i = 0;
	j = 0;
	var OutString = '';
	for (i=0; i<InString.length; i++){
		if (FromString.indexOf(InString.charAt(i)) > -1){
			j = FromString.indexOf(InString.charAt(i));			
			OutString += ToString.charAt(j);
		}
		else{	
			OutString += InString.charAt(i);
		}
	}
	return OutString;
}


function TrimString(InString){
        var x = 0

        if (InString.length != 0) {
                while ((escape(InString.charAt(InString.length - 1)) == '%20') || (escape(InString.charAt(InString.length - 1)) == '%0A') || (escape(InString.charAt(InString.length - 1)) == '%0D')){
                        InString = InString.substring(0, InString.length - 1)
                }

                while ((escape(InString.charAt(0)) == '%20') || (escape(InString.charAt(0)) == '%0A') || (escape(InString.charAt(0)) == '%0D')){
                        InString = InString.substring(1, InString.length)
                }

                while (InString.indexOf('  ') != -1) {
                        x = InString.indexOf('  ')
                        InString = InString.substring(0, x) + InString.substring(x+1, InString.length )

                 }

                return InString
        }

        else {
                return ''
        }

}

function RemovePunctuation(InString){

var OutString = '';
        for (i=0; i<InString.length; i++){
                if ((InString.charAt(i) == '.') || (InString.charAt(i) == ',') ||(InString.charAt(i) == ';') || (InString.charAt(i) == ':') || (InString.charAt(i) == '!') || (InString.charAt(i) == '?') || (InString.charAt(i) == '"')){}
                else {
                        OutString += InString.charAt(i);
                }
        }
        return OutString;
}

function CheckBeginning(Guess, Answer){
var OutString = '';
var i = 0;
        while (Guess.charAt(i) == Answer.charAt(i)) {
                OutString += Guess.charAt(i);
                i++;
        }
        return OutString;
}

function CheckEnd(Guess, Answer){
var i=0;
var j=0;
var OutString='';
        i = Guess.length;
        j = Answer.length;
        while (Guess.charAt(i) == Answer.charAt(j)){
                OutString = Guess.charAt(i) + OutString;
                i--;
                j--;
        }
        return OutString;
}


function FindLongest(InArray){
	if (InArray.length < 1){return -1;}

	var Longest = 0;
	for (var i=1; i<InArray.length; i++){
		if (InArray[i].length > InArray[Longest].length){
			Longest = i;
		}
	}
	return Longest;
}

function CheckWords(Guess, Answer){
        var Start = 0;
        var End = 0;
        var LoopCounter = 0;
        var ReturnList = '';
        var i = 0;
        var j = 0;

        GuessWords = new Array();
        AnswerWords = new Array();

        Guess = RemovePunctuation(Guess);
        Answer = RemovePunctuation(Answer);

        while (Guess.indexOf(' ', Start) > -1) {
                End = Guess.indexOf(' ', Start);
                GuessWords[LoopCounter] = ConvertCase(Guess.substring(Start, End), 0);
                LoopCounter++;
                Start = End + 1;
        }
        GuessWords[LoopCounter] = ConvertCase(Guess.substring(Start, Guess.length), 0);

        Start = 0;
        LoopCounter = 0;

        while (Answer.indexOf(' ', Start) > -1) {
                End = Answer.indexOf(' ', Start);
                AnswerWords[LoopCounter] = Answer.substring(Start, End);
                LoopCounter++;
                Start = End + 1;
        }
        AnswerWords[LoopCounter] = Answer.substring(Start, Answer.length);

        ReturnList = '';

        for (i = 0; i < GuessWords.length; i++){
                for (j = 0; j < AnswerWords.length; j++){

                        if (GuessWords[i] == ConvertCase(AnswerWords[j], 0)){
                                ReturnList = ReturnList + AnswerWords[j] + ', ' ;
                                AnswerWords[j] = '';
                                break;
                        }
                }
        }
        if (ReturnList.length > 0){
                ReturnList = ReturnList.substring(0, ReturnList.length - 2);
        }
        return ReturnList;

}

function CheckAnswer(ShowHint, QNum){

//if the question's already correct, exit gracefully
	if (State[QNum-1][0] == 1){
		ShowAnswers(QNum);
		return;
	}

	var Output = '';

//Get the guess, trim it, and translate it if necessary
	var Guess = TrimString(eval('document.QForm' + QNum + '.Guess').value);

	if (platform == 'mac'){
		Guess = unescape(MacStringToWin(Guess));
	}

	var RealGuess = Guess;

	if (CaseSensitive == false){
		Guess = ConvertCase(Guess, 1);
	}

	if (Guess.length < 1){
		WriteFeedback(EnterGuess);
		return;
	}

//Get the correct answers and put them into an array
	CorrectAs = new Array();
	RealAs = new Array();

	for (var i=0; i<Answers[QNum-1].length; i++){
		CorrectAs[i] = unescape(Answers[QNum-1][i]);
		RealAs[i] = CorrectAs[i];
		if (CaseSensitive == false){
			CorrectAs[i] = ConvertCase(CorrectAs[i], 1);
		}
	}

//Check each answer to see whether it's correct -- if so, set state variables and exit
	var Right = -1;
	var OtherAnswers = '';
	for (i=0; i<CorrectAs.length; i++){
		if (Guess==CorrectAs[i]){Right = i;}else{OtherAnswers+=RealAs[i] + '<BR>';};
	}

	if (Right > -1){
		State[QNum-1][0] = 1;
		Output = CorrectResponse + ' ';
		if (OtherAnswers.length > 0){
			Output += TheseAnswersToo + '<BR>' + OtherAnswers;
		}

//Get the score for this question
	var HintPenalty = (State[QNum-1][2]*10)/CorrectAs[Right].length;
	State[QNum-1][4]  = Math.floor((10 - State[QNum-1][1]) - HintPenalty);

//Check whether the quiz is finished
		var Finished = true;
		for (var i=0; i<State.length; i++){
			if (State[i][0] == 0){Finished = false;}
		}

//Calculate scores
		if ((Finished==true)||(ContinuousScoring==true)){


//Add up scores for all questions done so far			
			var Score = 0;
			var DoneQs = 0;
			for (i=0; i<State.length; i++){
				if (State[i][0] == 1){
					Score += State[i][4];
					DoneQs++;
				}
			}
			Score = Math.floor((Score*100)/(DoneQs*10)) + '%';
			Output = Output + '<BR>' + YourScoreIs + ' ' + Score + '. ';
		}

		if (Finished == true){
			var CFT = 0;
			for (i=0; i<State.length; i++){
				if ((State[i][1] == 0)&&(State[i][2] == 0)){
				CFT++;
				}
			}
		Output += CorrectFirstTime + CFT + '/' + Answers.length;
		Output += '<BR>' + TopNextExButton;
		WriteFeedback(Output);
		}
		else{
			WriteFeedback(Output);
//Jump to the next question text box if there is one
			if (QNum < Answers.length){
				if (FocusBoxes==true){
					eval('document.QForm' + (QNum+1) + '.Guess').focus();
				}
			}
		}
	}

//else the answer wasn't right
	else {
//increment the tries or hint variable for that question
		if (ShowHint == false){State[QNum-1][1]++;}else{State[QNum-1][2]++;}

//Find which answer is closest
		CorrectBits = new Array();
		CorrectBits[0] = new Array(); //Beginning bits
		CorrectBits[1] = new Array(); //End bits
		CorrectBits[2] = new Array(); //Combined bits
		CorrectBits[3] = new Array(); //Hint (in case needed)

		for (i=0; i<CorrectAs.length; i++){
			CorrectBits[0][i] = CheckBeginning(Guess, CorrectAs[i]);
			if (CorrectBits[0][i].length > 0){
				CorrectBits[0][i] = RealAs[i].substring(0,CorrectBits[0][i].length);
			}

			CorrectBits[1][i] = CheckEnd(Guess, CorrectAs[i]);
			if (CorrectBits[1][i].length > 0){
				CorrectBits[1][i] = RealAs[i].substring(RealAs[i].length-CorrectBits[1][i].length,RealAs[i].length);
			}

			CorrectBits[2][i] = CorrectBits[0][i] + ' ... ' + CorrectBits[1][i];
			CorrectBits[3][i] = CorrectBits[0][i] + RealAs[i].charAt(CorrectBits[0][i].length);
			if (CorrectBits[3][i].charAt(CorrectBits[3][i].length-1) == ' '){
				CorrectBits[3][i] += RealAs[i].charAt(CorrectBits[3][i].length);
			}
			CorrectBits[3][i] += '...'
		}

		var LongestCorrect = FindLongest(CorrectBits[2]);
		if (CorrectBits[2][LongestCorrect].length > 5){
			Output = ThisMuchIsCorrect + '<BR>' + CorrectBits[2][LongestCorrect];
		}
		else{
			if (ShowHint == false){
				Output = IncorrectResponse;
			}
		}

//Include words found in the answer
		var FoundWords = CheckWords(Guess, CorrectAs[LongestCorrect])
		if (FoundWords.length > 0){
			Output += '<BR><BR>' + TheseWordsAppear + FoundWords;
		}

		if (ShowHint == true){
			Output += '<BR><BR>' + GiveHint + CorrectBits[3][LongestCorrect];
		}
		WriteFeedback(Output);
//Put the focus back in the box
		if (FocusBoxes==true){
			eval('document.QForm' + (QNum) + '.Guess').focus();
		}
	}
}

function WriteFeedback(Feedback) {
	Feedback = Webble(Feedback);
	parent.FeedbackFrame.document.clear();
	parent.FeedbackFrame.document.open();
	parent.FeedbackFrame.document.writeln ('<HTML>');
	parent.FeedbackFrame.document.writeln ('<BODY  BACKGROUND="" BGCOLOR="#e6ffe6" TEXT="#000000" LINK="#0000ff" VLINK="#0000cc">');
	parent.FeedbackFrame.document.writeln ('<CENTER><TABLE BORDER="0" CELLPADDING="5" CELLSPACING="1" WIDTH="85%">');
	parent.FeedbackFrame.document.writeln ('<TR><TD BGCOLOR="#d1e9d1" ALIGN="CENTER">') 
	parent.FeedbackFrame.document.writeln ('<FONT FACE="Geneva,Arial" SIZE="-1">');
	parent.FeedbackFrame.document.writeln (Feedback);
	parent.FeedbackFrame.document.writeln ('</FONT></TD></TR></TABLE></CENTER></BODY></HTML>');
	parent.FeedbackFrame.document.close();
}

CharList = new Array();

EscapeList = new Array();


function Webble(InString){
	var OutString = '';
	var NextChar = '';
	var FoundCode = '';
	var j = 0;
	var i = 0;
	for (i=0; i<InString.length; i++){
		FoundCode = '';
		NextChar = InString.charAt(i);
		for (j=0; j<CharList.length; j++){
			if (NextChar == CharList[j]){
				FoundCode = EscapeList[j];
				break;
			}
		}
		if (FoundCode.length > 0){
			OutString += FoundCode;
		}
		else{
			OutString += NextChar;
		}
	}
	return OutString;
}

var MacChars = '%80%81%82%83%84%85%86%87%88%89%8A%8B%8C%8D%8E%8F%90%91%92%93%94%95%96%97%98%99%9A';
MacChars += '%9B%9C%9D%9E%9F%A0%A1%A4%A5%A6%A7%A8%AA%AB%AC%AE%AF%B4%B6%BB%BC%BE%BF%C0%C1%C2%C4%C7%C8';
MacChars += '%C9%CA%CB%CC%CD%CE%CF%D0%D1%D2%D3%D4%D5%D6%D8%D9%DA%DB%DC%DD%E0%E1%E2%E3%E4%E5%E6%E7%E8%E9';
MacChars += '%EA%EB%EC%ED%EE%EF%F1%F2%F3%F4%F5%F6%F7%F8%FB%FD';

var WinChars = '%C4%C5%C7%C9%D1%D6%DC%E1%E0%E2%E4%E3%E5%E7%E9%E8%EA%EB%ED%EC%EE%EF%F1%F3%F2%F4';
WinChars += '%F6%F5%FA%F9%FB%FC%86%BA%A7%95%B6%DF%AE%99%92%A8%C6%D8%A5%F0%AA%BA%E6%F8%BF%A1%AC%83%AB%BB';
WinChars += '%85%82%C0%C3%D5%8C%9C%96%97%93%94%91%92%F7%FFY/%A4%8B%9B%87%B7%82%84%89%C2%CA%C1%CB';
WinChars += '%C8%CD%CE%CF%CC%D3%D4%D2%DA%DB%D9%B9%88%98%AF%B0%94';

WinChars = unescape(WinChars);
MacChars = unescape(MacChars)

function MacStringToWin(InString){

	var OutString = '';
	for (i=0; i<InString.length; i++){
		if ( (InString.charAt(i) > '~') && (MacChars.indexOf(InString.charAt(i)) > -1) ){
			OutString += WinChars.charAt(MacChars.indexOf(InString.charAt(i)));
		}
		else {
			OutString += InString.charAt(i);
		}
	}
	return escape(OutString);
}

function WinStringToMac(InString){

	var OutString = '';
	for (i=0; i<InString.length; i++){
		if ( (InString.charAt(i) > '~') && (WinChars.indexOf(InString.charAt(i)) > -1) ){
			OutString += MacChars.charAt(WinChars.indexOf(InString.charAt(i)));
		}
		else {
			OutString += InString.charAt(i);
		}
	}
	return escape(OutString);
}

function ShowAnswers(QNum){
//If the question isn't done, mark it as done. Score will be 0;
	State[QNum-1][0] = 1;
	State[QNum-1][1] = -1;
	State[QNum-1][2] = -1;

//Get the correct answers and put them into an array
	var Output = TheseCorrect + '<BR>';;
	for (var i=0; i<Answers[QNum-1].length; i++){
		Output += unescape(Answers[QNum-1][i]) + '<BR>';
	}
	WriteFeedback(Output);
	return true;
}

</SCRIPT>
</HEAD>
<!--<BODY>Fool those dumb ad-inserting ISPs</BODY>-->
<BODY BACKGROUND="" BGCOLOR="#e6ffe6" TEXT="#000000" onLoad="StartUp()">

<CENTER>
<TABLE BORDER="0" CELLPADDING="5" CELLSPACING="1" WIDTH="85%">

<TR><TD ALIGN="CENTER">
        <p><FONT SIZE="+1" FACE="Geneva,Arial" COLOR="#006666">Actividad 9: las 
          partes m&aacute;s peque&ntilde;as</FONT></p>
        </TD></TR>
<TR>
      <TD ALIGN="CENTER" height="2">&nbsp;</TD>
    </TR>

<TR><TD BGCOLOR="#d1e9d1" ALIGN="CENTER">


<TABLE BORDER="0" CELLPADDING="5" CELLSPACING="1" WIDTH="95%">



<TR>
<TD COLSPAN="2"><HR WIDTH="100%" HEIGHT="5">
</TD>
</TR>

<TR>
<TD VALIGN="TOP" BGCOLOR="#d1e9d1" ALIGN="RIGHT"><FONT SIZE="+1" FACE="Geneva,Arial">1</FONT></TD><TD VALIGN="TOP" BGCOLOR="#d1e9d1"><FONT SIZE="-1" FACE="Geneva,Arial">&#191;Cu&aacute;l de ellas conserva las tres funciones elementales que cumple un ser vivo? </FONT></TD>
</TR>
<FORM NAME="QForm1" onSubmit="CheckAnswer(false,1);return false;">
<TR><TD ALIGN="CENTER" BGCOLOR="#d1e9d1" COLSPAN="2"><TEXTAREA NAME="Guess" ROWS="2" COLS="30" WRAP="VIRTUAL"></TEXTAREA></TD></TR>
</FORM>

<FORM>
<TR><TD ALIGN="CENTER" BGCOLOR="#d1e9d1" COLSPAN="2"><FONT SIZE="-1" FACE="Geneva,Arial"><INPUT TYPE="button" VALUE="&#161;Compruebalo!" onClick="CheckAnswer(false, 1)"></FONT></TD></TR>
</FORM>








<TR>
<TD COLSPAN="2"><HR WIDTH="100%" HEIGHT="5">
</TD>
</TR>

</TABLE>
</TD></TR>


<TR>
<FORM NAME="NavButtons2">
<TD BGCOLOR="#bbddbb" ALIGN="CENTER"><FONT FACE="Geneva,Arial" SIZE="-1"><INPUT TYPE="button" VALUE="Volver" onClick="parent.history.back()"></FONT></TD>
</FORM>
</TR>


</TABLE>
</CENTER>

</BODY>
</HTML>
